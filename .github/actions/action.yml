name: 'deploy-acr-appservice'
description: 'deploy to acr and to app service'
inputs:
  context:  # id of input
    description: 'context of docker build'
    required: true
  repo:  # id of input
    description: 'ACR repository'
    required: true

  registry:  # id of input
    description: 'ACR registry'
    required: true
  service_principal:  # id of input
    description: 'Service Principal with access to ACR'
    required: true
  service_principal_password:  # id of input
    description: 'SP password'
    required: true

  AZURE_CREDENTIALS:  # id of input
    description: 'Credentials to connect to azure, with access to app service'
    required: true
  AZURE_WEBAPP_NAME:  # id of input
    description: 'Name of the app service'
    required: true
  resource_group:  # id of input
    description: 'Resource grp of the app service'
    required: true
  build_name:  # id of input
    description: 'Build name'
    required: true


runs:
  using: "composite"
  steps:
    - name: Login to ACR
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.service_principal }}
        password: ${{ inputs.service_principal_password }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.context }}
        push: true
        build-args: build_version=${{ github.sha }}
        tags: ${{ inputs.registry }}/${{ inputs.repo }}:${{ github.sha }}
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ inputs.AZURE_CREDENTIALS }}
    - name: Deploy to Azure Web App for Container
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ inputs.AZURE_WEBAPP_NAME }}
        images: ${{ inputs.registry }}/${{ inputs.repo }}:${{ github.sha }}
        slot-name: staging
    - name: Verify the deployment status
      uses: lakuapik/gh-actions-http-status@v1
      with:
       sites: '["https://openhack5ba15au8poi-staging.azurewebsites.net/api/healthcheck/poi"]'
       expected: '[200]'
        #if: github.ref == 'refs/heads/main'
        #runs-on: ubuntu-latest
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ inputs.AZURE_CREDENTIALS }}
    - name: Swap staging to production
      run: |
          az webapp deployment slot swap --name ${{ inputs.AZURE_WEBAPP_NAME }} --resource-group ${{ inputs.resource_group }} --slot staging --target-slot production
    - name: Create an issue if swap fails
      uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ inputs.build_name }} Workflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
          owner: context.repo.owner,
          repo: context.repo.repo,
          title: "${{ inputs.build_name }} Workflow ${{ github.run_number }} Failed! ",
          body: body
          });