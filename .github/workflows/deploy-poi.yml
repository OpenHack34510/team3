name: deploy-poi

env:
  workingdir: apis/poi/
  repo: devopsoh/api-poi
  context: apis/poi/web
  AZURE_WEBAPP_NAME: openhack5ba15au8poi
  resource_group: openhack5ba15au8rg
  build_name: deploy-poi

on:
  workflow_dispatch:
  push:
    #branches: [ main ]
    #paths:
    #  - 'apis/poi/**'
    #  - '!apis/poi/**.md'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{ env.workingdir}}
    - name: Test
      run: dotnet test ${{ env.workingdir}}/tests/UnitTests/
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: pwsh
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"OpenHack34510_team3" /o:"openhack34510" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  # deploy-acr-appservice:
  #   runs-on: ubuntu-latest
  #   #needs:
  #    # - test
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Deploy to ACR and App Service
  #       uses: ./.github/actions
  #       with:
  #        context: ${{ env.context }}
  #        repo: ${{ env.repo }}
  #        registry: ${{ secrets.registry }}
  #        service_principal: ${{ secrets.service_principal }}
  #        service_principal_password: ${{ secrets.service_principal_password }}
  #        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  #        AZURE_WEBAPP_NAME: ${{ env.AZURE_WEBAPP_NAME }}
  #        resource_group: ${{ env.resource_group }}
  #        build_name: ${{ env.build_name }}
  #        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}